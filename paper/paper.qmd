---
title: "Effect of Election on Currency Fluctuation"
subtitle: "Analysis of USD Exchange Rate Fluctuation during Inaugurtion week"
author: 
  - Sandy Yu
thanks: "Code and data are available at: https://github.com/Jingying-yu/election-season-and-currency-fluctuation.git"
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
toc: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(readr)
library(rstanarm)
library(knitr)
library(modelsummary)
library(ggplot2)
library(arrow)
```


# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}

## Data on Exchange Rate

```{r}
#| label: fig-exchange
#| fig-cap: Exchange Rate from 1971 to 2024
#| echo: false

exchange_inaug <- read_csv(here::here("data/analysis_data/exchange_inaug.csv"), show_col_types = FALSE)

exchange_inaug |>
  ggplot(aes(
    x = date,
    y = exchange_rate
  )) +
  geom_line() +
  labs(
    x = "Year",
    y = "Exchange Rate: USD to CAD (Base Currency: USD)",
    title = "Exchange Rate from 1971 to 2024"
  )
```

## Data on Election Results

### Selection of Data Source

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false

```

### Construction of Inauguration Week
$$Day1 \hspace{5mm} Day2 \hspace{5mm}  Day3 \hspace{7mm}  Inauguration\ Day \hspace{7mm} Day5 \hspace{5mm} Day6 \hspace{5mm} Day7$$


# Model {#sec-model}

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

$$y_i|\mu_i, \sigma \sim \mbox{Normal}(\mu_i, \sigma)$$

$$\mu_i = \alpha + \beta_i + \omega_i$$

$$\alpha \sim \mbox{Normal}(0, 2.5)$$

$$\beta \sim \mbox{Normal}(0, 2.5)$$

$$\omega \sim \mbox{Normal}(0, 2.5)$$

$$\sigma \sim \mbox{Exponential}(1)$$

Where:

-   $y_i$ is the daily exchange rate of USD v.s. CAD (base unit is USD = 1)

-   $\beta_i$ is a dummy variable (value is either 0 or 1) indicating whether the date is within the inauguration week (see data section for definition of inauguration week). If date is within the inauguration week, then the variable has a value of 1, and 0 otherwise.

-   $\omega_i$ is a dummy variable indicating whether a change of political party occurred in the corresponding election season. Each inauguration week receives identical value (the whole week is either all 1 or all 0). Value of 1 indicates that the elected president's political party is different from last season's president's, 0 otherwise.


We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results {#sec-results}

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

inaug_model <-
  readRDS(file = here::here("models/inaug_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
  list(
    "Inauguration model" = inaug_model
  ),
  statistic = "mad",
  fmt = 2,
  metrics = c("R2")
)
```


## Explaination for small R^2
```{r}
#| label: fig-size_visual
#| fig-cap: Estimate average change in Exchange Rate
#| echo: false
#| warning: false
#| message: false
colors <- c("No Inauguration Announcement" = "yellow", "Inauguration Announcement" = "blue")

exchange_inaug |>
  ggplot(aes(
    x = date,
    y = exchange_rate
  )) +
  geom_point(alpha = 0.005) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 0),
    method = "lm",
    aes(color = "No Inauguration Announcement"),
    formula = "y ~ x"
  ) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 1 & date >= "1974-08-06" & date <= "1974-08-12"),
    method = "lm",
    aes(color = "Inauguration Announcement"),
    formula = "y ~ x"
  ) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 1 & date >= "1977-01-17" & date <= "1977-01-23"),
    method = "lm",
    aes(color = "Inauguration Announcement"),
    formula = "y ~ x"
  ) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 1 & date >= "1981-01-17" & date <= "1981-01-23"),
    method = "lm",
    aes(color = "Inauguration Announcement"),
    formula = "y ~ x"
  ) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 1 & date >= "1981-01-17" & date <= "1981-01-23"),
    method = "lm",
    aes(color = "Inauguration Announcement"),
    formula = "y ~ x"
  ) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 1 & date >= "1989-01-17" & date <= "1989-01-23"),
    method = "lm",
    aes(color = "Inauguration Announcement"),
    formula = "y ~ x"
  ) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 1 & date >= "1993-01-17" & date <= "1993-01-23"),
    method = "lm",
    aes(color = "Inauguration Announcement"),
    formula = "y ~ x"
  ) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 1 & date >= "2001-01-17" & date <= "2001-01-23"),
    method = "lm",
    aes(color = "Inauguration Announcement"),
    formula = "y ~ x"
  ) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 1 & date >= "2009-01-17" & date <= "2009-01-23"),
    method = "lm",
    aes(color = "Inauguration Announcement"),
    formula = "y ~ x"
  ) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 1 & date >= "2017-01-17" & date <= "2017-01-23"),
    method = "lm",
    aes(color = "Inauguration Announcement"),
    formula = "y ~ x"
  ) +
  geom_smooth(
    data = exchange_inaug |> filter(inauguration_period == 1 & date >= "2021-01-17" & date <= "2021-01-23"),
    method = "lm",
    aes(color = "Inauguration Announcement"),
    formula = "y ~ x"
  ) + scale_color_manual(values = colors) +
  labs(
    x = "Date",
    y = "USD v.s. CAD Exchange Rate",
    title = "Exchange Rate from 1974 to 2024",
    color = "Period"
  ) + theme(legend.position = "bottom")

```



# Discussion {#sec-discussion}

## Expectation of the population

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Change of Political Party

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. We can see that the regression outcome from our data and the simulation created by the posterior distribution are not closely matched. This is because our predictor variables only contribute to a small section of the data (40 out of 13358 observations has inauguration_period == 1, 30 out of 13358 has change_party == 1).

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. We can see that the estimation parameters shifts minimally after taking data into account. This suggests that good prior parameters were set.


```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(inaug_model) +
  theme_classic() +
  theme(legend.position = "bottom")

posterior_vs_prior(inaug_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. Trace plots are often used to diagnose abnormalities of models. For both plots, lines are oscillating vertically and maintains an overall horizontal trend. This suggests that there is nothing out of the ordinary for our model.


@fig-stanareyouokay-2 is a Rhat plot. Rhat plot is a valuable tool for assessing convergence in Bayesian regression models, helping ensure the reliability and validity of the model's inference results. Both both plots, all data points are close to 1. This suggest that there is nothing out of the ordinary for our model.


```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(inaug_model, "trace")

plot(inaug_model, "rhat")
```



\newpage


# References


